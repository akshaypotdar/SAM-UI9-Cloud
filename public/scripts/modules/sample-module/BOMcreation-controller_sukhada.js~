define(['angular', './sample-module'], function (angular, controllers) {
    'use strict';

    // Controller definition
    controllers.controller('BOMCreationController', ['$scope','$http','$q','SamService','$rootScope','$state','$stateParams',  function ($scope,$http,$q,SamService,$rootScope,$state,$stateParams) {

$scope.loadingRow=true;
$scope.AssetData=[
  {
    "uri": "/asset/54JK41-fan",
    "partname": "54JK41-fan",
    "parent": "/asset/jetEngine103456",
    "partno": "564",
    "unitcost": "23.88",
    "serviceable": "true"
  },
  {
    "uri": "/asset/645HG-blade",
    "partname": "645HG-blade",
    "parent": "/asset/54JK41-fan",
    "partno": "225",
    "unitcost": "12.5",
    "serviceable": "false"
  },
  {
    "uri": "/asset/blade-1",
    "partname": "blade-1",
    "parent": "/asset/645HG-blade"
  },
  {
    "uri": "/asset/blade-2",
    "partname": "blade-2",
    "parent": "/asset/645HG-blade"
  },
  {
    "uri": "/asset/blade-3",
    "partname": "blade-3",
    "parent": "/asset/645HG-blade"
  },
  {
    "uri": "/asset/coil",
    "partname": "coil",
    "parent": "/asset/HY3-motor"
  },
  {
    "uri": "/asset/HY3-motor",
    "partname": "HY3-motor",
    "parent": "/asset/54JK41-fan",
    "partno": "953",
    "unitcost": "103.88",
    "serviceable": "true"
  },
  {
    "uri": "/asset/in-wires",
    "partname": "in-wires",
    "parent": "/asset/primary-wires"
  },
  {
    "uri": "/asset/LSJ-wires",
    "partname": "LSJ-wires",
    "parent": "/asset/54JK41-fan",
    "partno": "651",
    "unitcost": "56.25",
    "serviceable": "false"
  },
  {
    "uri": "/asset/out-wires",
    "partname": "out-wires",
    "parent": "/asset/primary-wires"
  },
  {
    "uri": "/asset/primary-wires",
    "partname": "primary-wires",
    "parent": "/asset/LSJ-wires"
  },
  {
    "uri": "/asset/secondary-wires",
    "partname": "secondary-wires",
    "parent": "/asset/LSJ-wires"
  },
  {
    "uri": "/asset/slider",
    "partname": "slider",
    "parent": "/asset/HY3-motor"
  },
  {
    "uri": "/asset/third-wires",
    "partname": "third-wires",
    "parent": "/asset/LSJ-wires"
  }
] ;

$scope.orderData=[
  {
    "uri": "/SAMOrder/54JK41-fan",
    "partname": "54JK41-fan",
    "parent": "/SAMOrder/ON0001",
    "partno": "564",
    "qty": "1",
    "totalweight": "34.12",
    "totalcost": "23.88"
  },
  {
    "uri": "/SAMOrder/645HG-blade",
    "partname": "645HG-blade",
    "parent": "/SAMOrder/ON0001",
    "partno": "225",
    "qty": "17",
    "totalweight": "60.00",
    "totalcost": "0"
  },
  {
    "uri": "/SAMOrder/blade-1",
    "partname": "blade-1",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/blade-2",
    "partname": "blade-2",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/blade-3",
    "partname": "blade-3",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/coil",
    "partname": "coil",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/HY3-motor",
    "partname": "HY3-motor",
    "parent": "/SAMOrder/ON0001",
    "partno": "953",
    "qty": "1",
    "totalweight": "78.24",
    "totalcost": "23.88"
  },
  {
    "uri": "/SAMOrder/in-wires",
    "partname": "in-wires",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/LSJ-wires",
    "partname": "LSJ-wires",
    "parent": "/SAMOrder/ON0001",
    "partno": "651",
    "qty": "8",
    "totalweight": "10.37",
    "totalcost": "0"
  },
  {
    "uri": "/SAMOrder/out-wires",
    "partname": "out-wires",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/primary-wires",
    "partname": "primary-wires",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/secondary-wires",
    "partname": "secondary-wires",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/slider",
    "partname": "slider",
    "parent": "/SAMOrder/ON0001"
  },
  {
    "uri": "/SAMOrder/third-wires",
    "partname": "third-wires",
    "parent": "/SAMOrder/ON0001"
  }
] ;


$scope.BOMdet=[
{
	"uri":"/SAMOrder/ON0001",
	"partname":"jetEngine103456"
},
{
	"uri":"/SAMOrder/54JK41-fan",
	"partname":"54JK41-fan",
	"parent":"/SAMOrder/ON0001",
	"partno":"564",
	"qty":"1",
	"totalweight":"34.12",
	"totalcost":"23.88"
},
{
	"uri":"/SAMOrder/645HG-blade",
	"partname":"645HG-blade",
	"parent":"/SAMOrder/ON0001",
	"partno":"225",
	"qty":"17",
	"totalweight":"60.00",
	"totalcost":"0"
},
{
	"uri":"/SAMOrder/HY3-motor",
	"partname":"HY3-motor",
	"parent":"/SAMOrder/54JK41-fan",
	"partno":"953",
	"qty":"1",
	"totalweight":"78.24",
	"totalcost":"23.88"
},
{
	"uri":"/SAMOrder/LSJ-wires",
	"partname":"LSJ-wires",
	"parent":"/SAMOrder/ON0001",
	"partno":"651",
	"qty":"8",
	"totalweight":"10.37",
	"totalcost":"0"
},
{
	"uri":"/SAMOrder/blade-1",
	"partname":"blade-1",
	"parent":"/SAMOrder/ON0001",
},
{
	"uri":"/SAMOrder/blade-2",
	"partname":"blade-2",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/blade-3",
	"partname":"blade-3",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/coil",
	"partname":"coil",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/slider",
	"partname":"slider",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/primary-wires",
	"partname":"primary-wires",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/secondary-wires",
	"partname":"secondary-wires",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/third-wires",
	"partname":"third-wires",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/in-wires",
	"partname":"in-wires",
	"parent":"/SAMOrder/ON0001"
},
{
	"uri":"/SAMOrder/out-wires",
	"partname":"out-wires",
	"parent":"/SAMOrder/ON0001"
}
];





$scope.BOMdetails= [
[{"SrNo":"1","Description":"ABSDF Fan Motor","PartNo":1234,"Qty":"5","Weight":"34.12","UnitCost":"23.88","TotalCost":"33.22","All":"1"},
{"SrNo":"1.2","Description":"ABSDF Fan Motor 1","PartNo":1284,"Qty":"2","Weight":"24.12","UnitCost":"55.88","TotalCost":"45.22","All":"1"},
{"SrNo":"1.3","Description":"ABSDF Fan Wire","PartNo":1884,"Qty":"8","Weight":"10.12","UnitCost":"15.88","TotalCost":"15.22","All":"1"},
{"SrNo":"1.4","Description":"ABSDF Fan Wire","PartNo":1984,"Qty":"3","Weight":"10.12","UnitCost":"15.88","TotalCost":"15.22","All":"1"},
{"SrNo":"1.5","Description":"ABSDF Fan Blades","PartNo":8984,"Qty":"3","Weight":"27.12","UnitCost":"75.08","TotalCost":"75.22","All":"1"},
{"SrNo":"1.6","Description":"ABSDF Fan Blades","PartNo":8904,"Qty":"6","Weight":"27.12","UnitCost":"75.08","TotalCost":"75.22","All":"1"}],
[{"SrNo":"2","Description":"JH0 Fan Motor","PartNo":1234,"Qty":"5","Weight":"34.1","UnitCost":"23.8","TotalCost":"33.22","All":"1"},
{"SrNo":"2.1","Description":"JHSDF Fan Motor 1","PartNo":1284,"Qty":"2","Weight":"24.2","UnitCost":"55.8","TotalCost":"45.22","All":"1"},
{"SrNo":"2.2","Description":"JHSDF Fan Motor 1","PartNo":1284,"Qty":"2","Weight":"24.12","UnitCost":"55.88","TotalCost":"45.22","All":"1"},
{"SrNo":"2.3","Description":"JHSDF Fan Wire","PartNo":1884,"Qty":"8","Weight":"10.12","UnitCost":"15.88","TotalCost":"15.22","All":"1"},
{"SrNo":"2.4","Description":"JHSDF Fan Wire","PartNo":1984,"Qty":"3","Weight":"10.12","UnitCost":"15.88","TotalCost":"15.22","All":"1"}]
];
$scope.tempArr=[];

/*
$scope.pageReload=function() {
$state.reload();
};
*/

/*
$scope.getBOMdet = function(){
	 angular.forEach($scope.BOMdet, function(value, key) {
		//console.log("v.."+value.uri+"k"+key);
			$scope.uriVar=value.uri;
			//console.log($scope.uriVar);
			angular.forEach($scope.BOMdet, function(value1, key1) {
				if($scope.uriVar==value1.parent)
				{
					//console.log("uri.."+$scope.uriVar+"..parent.."+value1.parent+"..key.."+key1);
					$scope.tempArr.push(key1);
					//console.log("array.."+JSON.stringify($scope.tempArr));
					
				}//console.log("array.."+$scope.tempArr);
			});
	});
};
$scope.getBOMdet();*/

//function for Asset and Order Data start

$scope.left=421;
$scope.top=122;
$scope.hotSpotArray=[];
$scope.engineName="jetEngine103456";
$scope.getHotSpots = function(param){
	if($rootScope.loadingVar==true)
		{ console.log("inside if.... "+$rootScope.loadingVar);
			$rootScope.loadingVar=false;
			 console.log("inside if 1111.... "+$rootScope.loadingVar);
			$state.transitionTo($state.current, $stateParams, { 
 		 		reload: true, inherit: true, notify: true
			});
			
		}

	SamService.getChildDataAsset(param)
	.then(function(response){
		
		
		console.dir(response.data);
		$scope.hotSpotArray=response.data;
		console.log("hotspot...."+$scope.hotSpotArray);
		
	},function(error){
    		console.log("failure");
 	});
};
$scope.getHotSpots($scope.engineName);



$scope.BOMDetail=[];
//BOM Edit start...
$scope.getBOMdetails = function(item){
	console.log("item:"+item);
	
}
$scope.getBOMdetails1 = function(item){
	$scope.BOMDetail=$scope.BOMdetails[item];
}

$scope.dummyFunction = function(){
alert("inside dummyFunction");
}

$scope.data="";
$scope.selectedCounter = 0;
$scope.selectedRow = null;  // initialize our variable to null

  $scope.setClickedRow = function(index,x){  //function that sets the value of selectedRow to current index
	
	$scope.selectedDataIndex=index;
	$scope.selectedData=x;
      if (document.getElementById("checking-"+index).checked) { 
	$scope.selectedCounter ++;
	console.log("x data:"+JSON.stringify(x));
	document.getElementById("row-"+index).className="highlight-row";
        return true;
      } else {
	$scope.selectedCounter --;
	document.getElementById("row-"+index).className="";
        return false;
      }

  } 

$scope.show = false;
$scope.addRow = function() {
    $scope.show = true;
    $scop.new = {};
  };
$scope.editing=false;
$scope.newField={};
/*$scope.editAppKey = function() {
	console.log("edit");
        $scope.editing = $scope.BOMdetails.indexOf($scope.data);
	console.log($scope.editing);
	console.log($scope.BOMdetails.indexOf($scope.data));
        $scope.newField = angular.copy($scope.data);
    }

    $scope.saveField = function(index) {
	console.log("save");
        if ($scope.editing !== false) {
            $scope.BOMdetails[$scope.editing] = $scope.newField;
            $scope.editing = false;
        }       
    };*/

    $scope.cancel = function(index) {
        if ($scope.editing !== false) {
            $scope.BOMdetails[$scope.editing] = $scope.newField;
            $scope.editing = false;
        }       
    }; 


//BOM Edit end...
$rootScope.cartCounter = 0;
/*************             add to cart start                        ****************/
$scope.selectedItems = function()
{	alert("add to cart "+ $scope.selectedCounter);
	$rootScope.cartCounter = $scope.selectedCounter;
}

/**********                add to cart end                                         *************/ 





//*************************************** SELECTION START ************************************************************

//Selection

var initialW=0;
//console.log("initialW"+initialW);
var initialH=0;
//console.log("initialH)"+initialH);

var abcd=0;
var pqrs=0;

$(document).ready(function(){ 
  $("#grid").mousedown(function (e) {
console.log("e:",e);

        $("#big-ghost").remove();
        $(".ghost-select").addClass("ghost-active");
//var abcd=e.pageX-546;
//var pqrs=e.pageY-105;
var offset = $(this).offset();
if(e.pageX >= offset.left){
        abcd = e.pageX - offset.left,
        pqrs = e.pageY - offset.top;}
if(e.pageX < offset.left){
        abcd = offset.left - e.pageX,
        pqrs = offset.top - e.pageY;}

console.log("abcd"+abcd);
console.log("pqrs"+pqrs);
        $(".ghost-select").css("left", abcd);

	$(".ghost-select").css("top", pqrs);
	var abc="rgba(239, 28, 190, 0.6)";
	$(".ghost-select").css("background-color", abc);
        initialW = e.pageX;
	//console.log("e.pageX"+e.pageX);
        initialH = e.pageY;
	//console.log("e.pageY"+e.pageY);

        $(document).bind("mouseup", selectElements);
        $(document).bind("mousemove", openSelector);
	

    });
  
  
});


function selectElements(e) {
	$scope.BOMDetail1=[];
	$scope.BOMDetail=[];
	$scope.loadingRow=false;
	
    $("#score>span").text('0');
    $(document).unbind("mousemove", openSelector);
    $(document).unbind("mouseup", selectElements);
    var maxX = 0;
    var minX = 5000;
    var maxY = 0;
    var minY = 5000;
    var totalElements = 0;
    var elementArr = new Array();
	$scope.mainPart=0;
	$scope.subPart=0;
    $(".elements").each(function () {
        var aElem = $(".ghost-select");
        var bElem = $(this);
        var result = doObjectsCollide(aElem, bElem);

        //console.log(result);
        if (result == true) {
	console.log(bElem.context.id);
	$scope.hotspotId= bElem.context.id; 
		/*if($scope.hotspotId=="ball")
		{
			angular.forEach($scope.BOMdetails[0],function(value){
				$scope.BOMDetail.push(value);
			});
			$scope.$digest();
		}
		else if($scope.hotspotId=="square")
			{
			angular.forEach($scope.BOMdetails[1],function(value){
				$scope.BOMDetail.push(value);
			});;
			$scope.$digest();
		}
else{}*/
	
	  angular.forEach($scope.hotSpotArray,function(value,key){
		
		if(value.partname==$scope.hotspotId)
		{
			$scope.mainPart++;
			console.log("main part .... "+$scope.mainPart);
			value.SrNo=key+1;
			SamService.getSingleOrder(value.partname)
			.then(function(response){
				SamService.getChildDataAsset(value.partname)
				.then(function(response){
					$scope.childs=response.data;
					angular.forEach($scope.childs,function(value1,key1){
						console.log("key:"+key);
						SamService.getSingleOrder(value1.partname)
						.then(function(response){
							//if(response){alert("if");}else{alert("if");}
							$scope.singleorder1=response.data;
							value1.qty=$scope.singleorder1[0].qty;
							value1.Weight=$scope.singleorder1[0].totalweight;
							value1.TotalCost=$scope.singleorder1[0].totalcost;
  						        value1.SrNo1=(key+1.0)+"."+(key1+1.0);
							value1.SrNo= parseFloat(value1.SrNo1);

						},function(error){
							console.log("failure");
						});


						$scope.BOMDetail.push(value1);
						console.log(value1);
					});
				},function(error){
					console.log("failure");
				});
				$scope.singleorder=response.data;
				value.qty=$scope.singleorder[0].qty;
				value.Weight=$scope.singleorder[0].totalweight;
				value.TotalCost=$scope.singleorder[0].totalcost;
				$scope.BOMDetail.push(value);
				console.log(value);
				$scope.loadingRow=true;
			},function(error){
				console.log("failure");
			});
		}
				
	  });
	$scope.$digest();
	

          $("#score>span").text( Number($("#score>span").text())+1 );
          var aElemPos = bElem.offset();
                var bElemPos = bElem.offset();
                var aW = bElem.width();
                var aH = bElem.height();
                var bW = bElem.width();
                var bH = bElem.height();

                var coords = checkMaxMinPos(aElemPos, bElemPos, aW, aH, bW, bH, maxX, minX, maxY, minY);
                maxX = coords.maxX;
                minX = coords.minX;
                maxY = coords.maxY;
                minY = coords.minY;
                var parent = bElem.parent();

                //console.log(aElem, bElem,maxX, minX, maxY,minY);
                if (bElem.css("left") === "auto" && bElem.css("top") === "auto") {
                    bElem.css({
                        'left': parent.css('left'),
                        'top': parent.css('top')
                    });
                }
          $("body").append("<div id='big-ghost' class='big-ghost' x='" + Number(minX - 20) + "' y='" + Number(minY - 10) + "'></div>");

            $("#big-ghost").css({
                'width': maxX + 40 - minX,
                'height': maxY + 20 - minY,
                'top': minY - 10,
                'left': minX - 20
            });
          
          
        }
console.log("inside each");
    });
    
    $(".ghost-select").removeClass("ghost-active");
    $(".ghost-select").width(0).height(0);
	

	$scope.$digest();
    ////////////////////////////////////////////////

}

function openSelector(e) {
    var w = Math.abs(initialW - e.pageX);
    var h = Math.abs(initialH - e.pageY);

    $(".ghost-select").css({
        'width': w,
        'height': h
    });
    if (abcd <= initialW && pqrs >= initialH) {
        $(".ghost-select").css({
            'left': abcd
        });
    } else if (pqrs <= initialH && abcd >= initialW) {
        $(".ghost-select").css({
            'top': pqrs
        });
    } else if (e.pageY < initialH && e.pageX < initialW) {
        $(".ghost-select").css({
            'left': abcd,
            "top": pqrs
        });
    }

}
  
  
function doObjectsCollide(a, b) { // a and b are your objects
    //console.log(a.offset().top,a.position().top, b.position().top, a.width(),a.height(), b.width(),b.height());
    var aTop = a.offset().top;
    var aLeft = a.offset().left;
    var bTop = b.offset().top;
    var bLeft = b.offset().left;

    return !(
        ((aTop + a.height()) < (bTop)) ||
        (aTop > (bTop + b.height())) ||
        ((aLeft + a.width()) < bLeft) ||
        (aLeft > (bLeft + b.width()))
    );
}  

function checkMaxMinPos(a, b, aW, aH, bW, bH, maxX, minX, maxY, minY) {
    'use strict';

    if (a.left < b.left) {
        if (a.left < minX) {
            minX = a.left;
        }
    } else {
        if (b.left < minX) {
            minX = b.left;
        }
    }

    if (a.left + aW > b.left + bW) {
        if (a.left > maxX) {
            maxX = a.left + aW;
        }
    } else {
        if (b.left + bW > maxX) {
            maxX = b.left + bW;
        }
    }
    ////////////////////////////////
    if (a.top < b.top) {
        if (a.top < minY) {
            minY = a.top;
        }
    } else {
        if (b.top < minY) {
            minY = b.top;
        }
    }

    if (a.top + aH > b.top + bH) {
        if (a.top > maxY) {
            maxY = a.top + aH;
        }
    } else {
        if (b.top + bH > maxY) {
            maxY = b.top + bH;
        }
    }

    return {
        'maxX': maxX,
        'minX': minX,
        'maxY': maxY,
        'minY': minY
    };
}




//*************************************** SELECTION END **************************************************************



 }]); //End Of Controller
});
